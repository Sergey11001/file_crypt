{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware'; // для сохранения в localStorage\nimport authApi from '../api/auth';\nconst useAuthStore = create(persist((set, get) => ({\n  user: null,\n  loading: false,\n  isAuthenticated: false,\n  checkAuth: () => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (payload.exp * 1000 > Date.now()) {\n          set({\n            user: {\n              email: payload.email,\n              name: payload.name\n            },\n            isAuthenticated: true,\n            loading: false\n          });\n          return;\n        }\n      } catch (e) {\n        console.error('Ошибка при разборе токена:', e);\n      }\n      localStorage.removeItem('access_token');\n    }\n    set({\n      loading: false\n    });\n  },\n  signIn: async (email, password) => {\n    set({\n      loading: true\n    });\n    try {\n      const response = await authApi.signIn(email, password);\n      localStorage.setItem('access_token', response.data.access_token);\n      localStorage.setItem('public_key', response.data.public_key);\n      set({\n        user: {\n          email: response.data.email\n        },\n        isAuthenticated: true,\n        loading: false\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      set({\n        loading: false\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  signUp: async (email, password, name, publicKey) => {\n    set({\n      loading: true\n    });\n    try {\n      const response = await authApi.signUp(email, password, name, publicKey);\n      localStorage.setItem('access_token', response.data.access_token);\n      localStorage.setItem('public_key', response.data.public_key);\n      set({\n        loading: false\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      set({\n        loading: false\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  },\n  signOut: () => {\n    localStorage.removeItem('access_token');\n    set({\n      user: null,\n      isAuthenticated: false\n    });\n  }\n}), {\n  name: 'auth-storage',\n  partialize: state => ({\n    user: state.user,\n    isAuthenticated: state.isAuthenticated\n  })\n}));\nexport default useAuthStore;","map":{"version":3,"names":["create","persist","authApi","useAuthStore","set","get","user","loading","isAuthenticated","checkAuth","token","localStorage","getItem","payload","JSON","parse","atob","split","exp","Date","now","email","name","e","console","error","removeItem","signIn","password","response","setItem","data","access_token","public_key","success","message","signUp","publicKey","signOut","partialize","state"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/stores/authStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware'; // для сохранения в localStorage\nimport authApi from '../api/auth';\n\nconst useAuthStore = create(\n    persist(\n        (set, get) => ({\n            user: null,\n            loading: false,\n            isAuthenticated: false,\n\n            checkAuth: () => {\n                const token = localStorage.getItem('access_token');\n                if (token) {\n                    try {\n                        const payload = JSON.parse(atob(token.split('.')[1]));\n                        if (payload.exp * 1000 > Date.now()) {\n                            set({\n                                user: {\n                                    email: payload.email,\n                                    name: payload.name,\n                                },\n                                isAuthenticated: true,\n                                loading: false,\n                            });\n                            return;\n                        }\n                    } catch (e) {\n                        console.error('Ошибка при разборе токена:', e);\n                    }\n                    localStorage.removeItem('access_token');\n                }\n                set({ loading: false });\n            },\n\n            signIn: async (email, password) => {\n                set({ loading: true });\n                try {\n                    const response = await authApi.signIn(email, password);\n                    localStorage.setItem('access_token', response.data.access_token);\n                    localStorage.setItem('public_key', response.data.public_key);\n                    set({\n                        user: { email: response.data.email },\n                        isAuthenticated: true,\n                        loading: false,\n                    });\n                    return { success: true };\n                } catch (error) {\n                    set({ loading: false });\n                    return { success: false, error: error.message };\n                }\n            },\n\n            signUp: async (email, password, name, publicKey) => {\n                set({ loading: true });\n                try {\n                    const response = await authApi.signUp(email, password, name, publicKey);\n                    localStorage.setItem('access_token', response.data.access_token);\n                    localStorage.setItem('public_key', response.data.public_key);\n                    set({ loading: false });\n                    return { success: true };\n                } catch (error) {\n                    set({ loading: false });\n                    return { success: false, error: error.message };\n                }\n            },\n\n            signOut: () => {\n                localStorage.removeItem('access_token');\n                set({\n                    user: null,\n                    isAuthenticated: false,\n                });\n            },\n        }),\n        {\n            name: 'auth-storage',\n            partialize: (state) => ({\n                user: state.user,\n                isAuthenticated: state.isAuthenticated,\n            }),\n        }\n    )\n);\n\nexport default useAuthStore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}