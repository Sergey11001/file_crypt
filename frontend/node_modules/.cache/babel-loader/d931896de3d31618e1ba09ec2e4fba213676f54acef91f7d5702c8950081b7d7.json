{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/MyFiles.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport filesApi from '../api/files';\nimport FileItem from '../components/FileItem';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { formatBytes, formatDate } from '../utils/helpers';\nimport { usePrivateKey } from \"../context/PrivateKeyContext\";\nimport { saveAs } from \"file-saver\";\nimport { decryptFile } from \"../utils/crypto\";\nimport Spinner from \"../components/Spinner\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyFiles() {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const {\n    privateKey\n  } = usePrivateKey();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/signin\");\n    }\n  }, [isAuthenticated, navigate]);\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [downloadingFile, setDownloadingFile] = useState(null);\n  const fetchFiles = async () => {\n    try {\n      const response = await filesApi.getMyFiles();\n      setFiles(response.data.files);\n    } catch (err) {\n      setError(err.message || \"Failed to load files\");\n      console.error(\"File loading error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleDownload = async (file, encryptedAesKey, privateKey) => {\n    if (!privateKey) {\n      toast.warn('Please upload your private key first to decrypt files');\n      return;\n    }\n    setDownloadingFile(file.id);\n    try {\n      const response = await filesApi.downloadFile(file.id);\n      if (!response.data || !(response.data instanceof ArrayBuffer)) {\n        var _response$data, _response$data$constr;\n        throw new Error(`Invalid data type: ${(_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$constr = _response$data.constructor) === null || _response$data$constr === void 0 ? void 0 : _response$data$constr.name}`);\n      }\n      const decryptedBlob = await decryptFile(response.data, encryptedAesKey, privateKey);\n      saveAs(decryptedBlob, file.name);\n    } catch (error) {\n      console.error(\"Download error:\", error);\n      setError(\"Failed to download file\");\n      toast.error('Failed to download file. Please try again.');\n    } finally {\n      setDownloadingFile(null);\n    }\n  };\n  const handleDelete = async fileUuid => {\n    try {\n      await filesApi.deleteFile(fileUuid);\n      await fetchFiles();\n      toast.success('File deleted successfully');\n    } catch (err) {\n      setError(err.message || \"Failed to delete file\");\n      console.error(\"Delete error:\", err);\n      toast.error('Failed to delete file');\n    }\n  };\n  const handleShare = fileUuid => {\n    console.log(\"Sharing file:\", fileUuid);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"large\",\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading files...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-list\",\n    children: [!privateKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-warning\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0\\uFE0F You need to upload your private key to decrypt files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(FileItem, {\n      file: {\n        id: file.uuid,\n        name: file.name,\n        size: formatBytes(file.size),\n        date: formatDate(file.created_at),\n        encryptedKey: file.symmetric_key\n      },\n      onDownload: () => handleDownload({\n        id: file.uuid,\n        name: file.name\n      }, file.symmetric_key, privateKey),\n      onShare: handleShare,\n      onDelete: handleDelete,\n      isOwner: true,\n      isDownloading: downloadingFile === file.uuid,\n      isDisabled: !privateKey\n    }, file.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-message\",\n      children: \"You don't have any files yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(MyFiles, \"sxi3TfmhnabsnUNMmnWdQruIy/4=\", false, function () {\n  return [useAuth, useNavigate, usePrivateKey];\n});\n_c = MyFiles;\nvar _c;\n$RefreshReg$(_c, \"MyFiles\");","map":{"version":3,"names":["useState","useEffect","filesApi","FileItem","useAuth","useNavigate","formatBytes","formatDate","usePrivateKey","saveAs","decryptFile","Spinner","toast","jsxDEV","_jsxDEV","MyFiles","_s","isAuthenticated","navigate","privateKey","files","setFiles","loading","setLoading","error","setError","downloadingFile","setDownloadingFile","fetchFiles","response","getMyFiles","data","err","message","console","handleDownload","file","encryptedAesKey","warn","id","downloadFile","ArrayBuffer","_response$data","_response$data$constr","Error","constructor","name","decryptedBlob","handleDelete","fileUuid","deleteFile","success","handleShare","log","className","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","uuid","date","created_at","encryptedKey","symmetric_key","onDownload","onShare","onDelete","isOwner","isDownloading","isDisabled","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/MyFiles.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport filesApi from '../api/files';\nimport FileItem from '../components/FileItem';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { formatBytes, formatDate } from '../utils/helpers';\nimport { usePrivateKey } from \"../context/PrivateKeyContext\";\nimport { saveAs } from \"file-saver\";\nimport { decryptFile } from \"../utils/crypto\";\nimport Spinner from \"../components/Spinner\";\nimport { toast } from 'react-toastify';\n\nexport default function MyFiles() {\n    const { isAuthenticated } = useAuth();\n    const navigate = useNavigate();\n    const { privateKey } = usePrivateKey();\n\n    useEffect(() => {\n        if (!isAuthenticated) {\n            navigate(\"/signin\");\n        }\n    }, [isAuthenticated, navigate]);\n\n    const [files, setFiles] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [downloadingFile, setDownloadingFile] = useState(null);\n\n    const fetchFiles = async () => {\n        try {\n            const response = await filesApi.getMyFiles();\n            setFiles(response.data.files);\n        } catch (err) {\n            setError(err.message || \"Failed to load files\");\n            console.error(\"File loading error:\", err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchFiles();\n    }, []);\n\n    const handleDownload = async (file, encryptedAesKey, privateKey) => {\n        if (!privateKey) {\n            toast.warn('Please upload your private key first to decrypt files');\n            return;\n        }\n\n        setDownloadingFile(file.id);\n        try {\n            const response = await filesApi.downloadFile(file.id);\n\n            if (!response.data || !(response.data instanceof ArrayBuffer)) {\n                throw new Error(`Invalid data type: ${response.data?.constructor?.name}`);\n            }\n\n            const decryptedBlob = await decryptFile(\n                response.data,\n                encryptedAesKey,\n                privateKey\n            );\n\n            saveAs(decryptedBlob, file.name);\n        } catch (error) {\n            console.error(\"Download error:\", error);\n            setError(\"Failed to download file\");\n            toast.error('Failed to download file. Please try again.');\n        } finally {\n            setDownloadingFile(null);\n        }\n    }\n\n    const handleDelete = async (fileUuid) => {\n        try {\n            await filesApi.deleteFile(fileUuid);\n            await fetchFiles();\n            toast.success('File deleted successfully');\n        } catch (err) {\n            setError(err.message || \"Failed to delete file\");\n            console.error(\"Delete error:\", err);\n            toast.error('Failed to delete file');\n        }\n    };\n\n    const handleShare = (fileUuid) => {\n        console.log(\"Sharing file:\", fileUuid);\n    };\n\n    if (loading) return (\n        <div className=\"loading-container\">\n            <Spinner size=\"large\" color=\"primary\" />\n            <p>Loading files...</p>\n        </div>\n    );\n\n    if (error) return <div className=\"error-message\">{error}</div>;\n\n    return (\n        <div className=\"files-list\">\n            {!privateKey && (\n                <div className=\"key-warning\">\n                    <span>⚠️ You need to upload your private key to decrypt files</span>\n                </div>\n            )}\n\n            {files.length > 0 ? (\n                files.map((file) => (\n                    <FileItem\n                        key={file.uuid}\n                        file={{\n                            id: file.uuid,\n                            name: file.name,\n                            size: formatBytes(file.size),\n                            date: formatDate(file.created_at),\n                            encryptedKey: file.symmetric_key\n                        }}\n                        onDownload={() => handleDownload({\n                            id: file.uuid,\n                            name: file.name,\n                        }, file.symmetric_key, privateKey)}\n                        onShare={handleShare}\n                        onDelete={handleDelete}\n                        isOwner={true}\n                        isDownloading={downloadingFile === file.uuid}\n                        isDisabled={!privateKey}\n                    />\n                ))\n            ) : (\n                <p className=\"empty-message\">You don't have any files yet</p>\n            )}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}