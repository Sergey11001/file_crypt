{"ast":null,"code":"import { decryptWithPrivateKey, decryptFile } from './crypto';\nimport filesApi from '../api/files';\nexport async function downloadAndDecryptFile(fileUuid, privateKeyPem) {\n  try {\n    const response = await filesApi.downloadFile(fileUuid);\n    const {\n      file,\n      file_data: encryptedFileBase64\n    } = response;\n    console.log(400);\n    const encryptedFileData = base64ToArrayBuffer(encryptedFileBase64);\n    console.log(100);\n    const symmetricKey = await decryptWithPrivateKey(file.symmetric_key, privateKeyPem);\n    console.log(2);\n    const decryptedFile = await decryptFile(encryptedFileData, symmetricKey);\n    console.log(3);\n    const blob = new Blob([decryptedFile], {\n      type: 'application/octet-stream'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = file.name;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    return true;\n  } catch (error) {\n    console.error('Download error:', error);\n    throw error;\n  }\n}\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n}","map":{"version":3,"names":["decryptWithPrivateKey","decryptFile","filesApi","downloadAndDecryptFile","fileUuid","privateKeyPem","response","downloadFile","file","file_data","encryptedFileBase64","console","log","encryptedFileData","base64ToArrayBuffer","symmetricKey","symmetric_key","decryptedFile","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","name","body","appendChild","click","removeChild","revokeObjectURL","error","base64","binaryString","window","atob","bytes","Uint8Array","length","i","charCodeAt"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/utils/fileDownload.js"],"sourcesContent":["import { decryptWithPrivateKey, decryptFile } from './crypto';\nimport filesApi from '../api/files';\n\nexport async function downloadAndDecryptFile(fileUuid, privateKeyPem) {\n    try {\n        const response = await filesApi.downloadFile(fileUuid);\n        const { file, file_data: encryptedFileBase64 } = response;\n        console.log(400);\n\n        const encryptedFileData = base64ToArrayBuffer(encryptedFileBase64);\n\n        console.log(100);\n\n        const symmetricKey = await decryptWithPrivateKey(\n            file.symmetric_key,\n            privateKeyPem\n        );\n        console.log(2);\n\n        const decryptedFile = await decryptFile(encryptedFileData, symmetricKey);\n\n        console.log(3);\n\n        const blob = new Blob([decryptedFile], { type: 'application/octet-stream' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = file.name;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n\n        return true;\n    } catch (error) {\n        console.error('Download error:', error);\n        throw error;\n    }\n}\n\nfunction base64ToArrayBuffer(base64) {\n    const binaryString = window.atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,WAAW,QAAQ,UAAU;AAC7D,OAAOC,QAAQ,MAAM,cAAc;AAEnC,OAAO,eAAeC,sBAAsBA,CAACC,QAAQ,EAAEC,aAAa,EAAE;EAClE,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,YAAY,CAACH,QAAQ,CAAC;IACtD,MAAM;MAAEI,IAAI;MAAEC,SAAS,EAAEC;IAAoB,CAAC,GAAGJ,QAAQ;IACzDK,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAEhB,MAAMC,iBAAiB,GAAGC,mBAAmB,CAACJ,mBAAmB,CAAC;IAElEC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAEhB,MAAMG,YAAY,GAAG,MAAMf,qBAAqB,CAC5CQ,IAAI,CAACQ,aAAa,EAClBX,aACJ,CAAC;IACDM,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMK,aAAa,GAAG,MAAMhB,WAAW,CAACY,iBAAiB,EAAEE,YAAY,CAAC;IAExEJ,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,aAAa,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC5E,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;IACZG,CAAC,CAACI,QAAQ,GAAGpB,IAAI,CAACqB,IAAI;IACtBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,CAAC,CAAC;IAC5BA,CAAC,CAACQ,KAAK,CAAC,CAAC;IACTP,QAAQ,CAACK,IAAI,CAACG,WAAW,CAACT,CAAC,CAAC;IAC5BF,GAAG,CAACY,eAAe,CAACb,GAAG,CAAC;IAExB,OAAO,IAAI;EACf,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZxB,OAAO,CAACwB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACf;AACJ;AAEA,SAASrB,mBAAmBA,CAACsB,MAAM,EAAE;EACjC,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;EACxC,MAAMI,KAAK,GAAG,IAAIC,UAAU,CAACJ,YAAY,CAACK,MAAM,CAAC;EACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACK,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC1CH,KAAK,CAACG,CAAC,CAAC,GAAGN,YAAY,CAACO,UAAU,CAACD,CAAC,CAAC;EACzC;EACA,OAAOH,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}