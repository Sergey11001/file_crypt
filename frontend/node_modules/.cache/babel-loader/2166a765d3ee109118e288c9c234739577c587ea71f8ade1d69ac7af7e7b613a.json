{"ast":null,"code":"import{useState,useEffect}from'react';import FileItem from'../components/FileItem';import filesApi from\"../api/files\";import{formatBytes,formatDate}from\"../utils/helpers\";import{decryptFile}from\"../utils/crypto\";import{saveAs}from\"file-saver\";import{toast}from\"react-toastify\";import usePrivateKeyStore from\"../stores/privateKeyStore\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function SharedFiles(){const[files,setFiles]=useState([]);const[loading,setLoading]=useState(true);const{privateKey}=usePrivateKeyStore();useEffect(()=>{const fetchFiles=async()=>{try{const response=await filesApi.getAvailableFiles();setFiles(response.data.files);}catch(error){toast.error('Ошибка загрузки файлов:',error);}finally{setLoading(false);}};fetchFiles();},[]);const handleDownload=async(file,encryptedAesKey,privateKeyPem)=>{try{const response=await filesApi.downloadFile(file.id);if(!response.data||!(response.data instanceof ArrayBuffer)){var _response$data,_response$data$constr;throw new Error(\"Invalid data type: \".concat((_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$constr=_response$data.constructor)===null||_response$data$constr===void 0?void 0:_response$data$constr.name));}let blob;if(!encryptedAesKey){blob=new Blob([response.data]);}else{blob=await decryptFile(response.data,encryptedAesKey,privateKeyPem);}saveAs(blob,file.name);}catch(error){toast.error(\"Ошибка при скачивании файла.\");throw error;}};if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"});return/*#__PURE__*/_jsx(\"div\",{className:\"files-list\",children:files.length>0?files.map(file=>/*#__PURE__*/_jsx(FileItem,{file:{id:file.uuid,name:file.name,size:formatBytes(file.size),date:formatDate(file.created_at),encryptedKey:file.symmetric_key},isOwner:false,onDownload:()=>handleDownload({id:file.uuid,name:file.name},file.symmetric_key,privateKey)},file.uuid)):/*#__PURE__*/_jsx(\"p\",{children:\"\\u0412\\u0430\\u043C \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043B\\u0438 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A \\u0444\\u0430\\u0439\\u043B\\u0430\\u043C\"})});}","map":{"version":3,"names":["useState","useEffect","FileItem","filesApi","formatBytes","formatDate","decryptFile","saveAs","toast","usePrivateKeyStore","jsx","_jsx","SharedFiles","files","setFiles","loading","setLoading","privateKey","fetchFiles","response","getAvailableFiles","data","error","handleDownload","file","encryptedAesKey","privateKeyPem","downloadFile","id","ArrayBuffer","_response$data","_response$data$constr","Error","concat","constructor","name","blob","Blob","children","className","length","map","uuid","size","date","created_at","encryptedKey","symmetric_key","isOwner","onDownload"],"sources":["/home/sergey/univer/frontend/src/pages/SharedFiles.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport FileItem from '../components/FileItem';\nimport filesApi from \"../api/files\";\nimport {formatBytes, formatDate} from \"../utils/helpers\";\nimport {decryptFile} from \"../utils/crypto\";\nimport {saveAs} from \"file-saver\";\nimport {toast} from \"react-toastify\";\nimport usePrivateKeyStore from \"../stores/privateKeyStore\";\n\nexport default function SharedFiles() {\n    const [files, setFiles] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const { privateKey } = usePrivateKeyStore();\n\n    useEffect(() => {\n        const fetchFiles = async () => {\n            try {\n                const response = await filesApi.getAvailableFiles();\n                setFiles(response.data.files);\n            } catch (error) {\n                toast.error('Ошибка загрузки файлов:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchFiles();\n    }, []);\n\n    const handleDownload = async (file, encryptedAesKey, privateKeyPem) => {\n        try {\n            const response = await filesApi.downloadFile(file.id);\n\n            if (!response.data || !(response.data instanceof ArrayBuffer)) {\n                throw new Error(`Invalid data type: ${response.data?.constructor?.name}`);\n            }\n\n            let blob\n            if (!encryptedAesKey) {\n                blob = new Blob([response.data]);\n            } else {\n                blob = await decryptFile(\n                    response.data,\n                    encryptedAesKey,\n                    privateKeyPem\n                );\n            }\n\n            saveAs(blob, file.name);\n        } catch (error) {\n            toast.error(\"Ошибка при скачивании файла.\");\n            throw error;\n        }\n    }\n\n    if (loading) return <div>Загрузка...</div>;\n\n    return (\n        <div className=\"files-list\">\n            {files.length > 0 ? (\n                files.map((file) => (\n                    <FileItem\n                        key={file.uuid}\n                        file={{\n                            id: file.uuid,\n                            name: file.name,\n                            size: formatBytes(file.size),\n                            date: formatDate(file.created_at),\n                            encryptedKey: file.symmetric_key\n                        }}\n                        isOwner={false}\n                        onDownload={() => handleDownload({\n                            id: file.uuid,\n                            name: file.name,\n                        }, file.symmetric_key, privateKey)}\n                    />\n                ))\n            ) : (\n                <p>Вам пока не предоставили доступ к файлам</p>\n            )}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}