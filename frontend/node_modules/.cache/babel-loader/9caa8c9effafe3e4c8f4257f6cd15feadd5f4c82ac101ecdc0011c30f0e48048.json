{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/components/FileDownloadRedirect.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport filesApi from '../api/files';\nimport { toast } from 'react-toastify';\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileDownloadRedirect = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const downloadFile = async () => {\n      try {\n        if (!id) {\n          throw new Error('File ID not specified');\n        }\n        const response = await filesApi.downloadCommonFile(id);\n        const contentDisposition = response.headers['content-disposition'];\n        const fileNameMatch = contentDisposition.match(/filename\\*?=([^;]+)/gi);\n        let fileName = `file_${id}`;\n        if (fileNameMatch) {\n          fileName = fileNameMatch[0].split(\"'\")[2] ||\n          // filename*\n          fileNameMatch[0].split(\"=\")[1]; // filename\n          fileName = decodeURIComponent(fileName);\n        }\n        const blob = new Blob([response.data]);\n        saveAs(blob, fileName);\n        navigate(-1);\n      } catch (e) {\n        toast.error('Не удалось загрузить файл');\n        navigate('/storage/my');\n      }\n    };\n    downloadFile();\n  }, [id, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Downloading file...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 16\n  }, this);\n};\n_s(FileDownloadRedirect, \"jBhyhCnGnTynLG86SR547tPdgyU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FileDownloadRedirect;\nvar _c;\n$RefreshReg$(_c, \"FileDownloadRedirect\");","map":{"version":3,"names":["useEffect","useParams","useNavigate","filesApi","toast","saveAs","jsxDEV","_jsxDEV","FileDownloadRedirect","_s","id","navigate","downloadFile","Error","response","downloadCommonFile","contentDisposition","headers","fileNameMatch","match","fileName","split","decodeURIComponent","blob","Blob","data","e","error","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/components/FileDownloadRedirect.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport filesApi  from '../api/files';\nimport { toast } from 'react-toastify';\nimport { saveAs } from \"file-saver\";\n\nexport const FileDownloadRedirect = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const downloadFile = async () => {\n            try {\n                if (!id) {\n                    throw new Error('File ID not specified');\n                }\n\n                const response = await filesApi.downloadCommonFile(id);\n\n                const contentDisposition = response.headers['content-disposition'];\n                const fileNameMatch = contentDisposition.match(/filename\\*?=([^;]+)/gi);\n\n                let fileName =  `file_${id}`\n                if (fileNameMatch) {\n                    fileName = fileNameMatch[0].split(\"'\")[2] || // filename*\n                        fileNameMatch[0].split(\"=\")[1];   // filename\n                    fileName = decodeURIComponent(fileName);\n                }\n\n                const blob = new Blob([response.data]);\n\n                saveAs(blob, fileName);\n\n                navigate(-1);\n                } catch (e) {\n                    toast.error('Не удалось загрузить файл');\n                    navigate('/storage/my');\n                }\n            };\n\n            downloadFile();\n        }, [id, navigate]);\n\n        return <div>Downloading file...</div>;\n    }"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,QAAQ,MAAO,cAAc;AACpC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,IAAI,CAACF,EAAE,EAAE;UACL,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QAEA,MAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACY,kBAAkB,CAACL,EAAE,CAAC;QAEtD,MAAMM,kBAAkB,GAAGF,QAAQ,CAACG,OAAO,CAAC,qBAAqB,CAAC;QAClE,MAAMC,aAAa,GAAGF,kBAAkB,CAACG,KAAK,CAAC,uBAAuB,CAAC;QAEvE,IAAIC,QAAQ,GAAI,QAAQV,EAAE,EAAE;QAC5B,IAAIQ,aAAa,EAAE;UACfE,QAAQ,GAAGF,aAAa,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAAI;UACzCH,aAAa,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG;UACtCD,QAAQ,GAAGE,kBAAkB,CAACF,QAAQ,CAAC;QAC3C;QAEA,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAEtCpB,MAAM,CAACkB,IAAI,EAAEH,QAAQ,CAAC;QAEtBT,QAAQ,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,OAAOe,CAAC,EAAE;QACRtB,KAAK,CAACuB,KAAK,CAAC,2BAA2B,CAAC;QACxChB,QAAQ,CAAC,aAAa,CAAC;MAC3B;IACJ,CAAC;IAEDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,EAAE,EAAEC,QAAQ,CAAC,CAAC;EAElB,oBAAOJ,OAAA;IAAAqB,QAAA,EAAK;EAAmB;IAAAR,QAAA,EAAAS,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzC,CAAC;AAAAtB,EAAA,CAtCQD,oBAAoB;EAAA,QACdP,SAAS,EACPC,WAAW;AAAA;AAAA8B,EAAA,GAFnBxB,oBAAoB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}