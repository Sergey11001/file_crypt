{"ast":null,"code":"import{create}from'zustand';import{persist}from'zustand/middleware';// для сохранения в localStorage\nimport authApi from'../api/auth';const useAuthStore=create(persist((set,get)=>({user:null,loading:false,isAuthenticated:false,checkAuth:()=>{const token=localStorage.getItem('access_token');if(token){try{const payload=JSON.parse(atob(token.split('.')[1]));if(payload.exp*1000>Date.now()){set({user:{email:payload.email,name:payload.name},isAuthenticated:true,loading:false});return;}}catch(e){console.error('Ошибка при разборе токена:',e);}localStorage.removeItem('access_token');}set({loading:false});},signIn:async(email,password)=>{set({loading:true});try{const response=await authApi.signIn(email,password);localStorage.setItem('access_token',response.data.access_token);localStorage.setItem('public_key',response.data.public_key);set({user:{email:response.data.email},isAuthenticated:true,loading:false});return{success:true};}catch(error){set({loading:false});return{success:false,error:error.message};}},signUp:async(email,password,name,publicKey)=>{set({loading:true});try{const response=await authApi.signUp(email,password,name,publicKey);localStorage.setItem('access_token',response.data.access_token);localStorage.setItem('public_key',response.data.public_key);set({loading:false});return{success:true};}catch(error){set({loading:false});return{success:false,error:error.message};}},signOut:()=>{localStorage.removeItem('access_token');set({user:null,isAuthenticated:false});}}),{name:'auth-storage',partialize:state=>({user:state.user,isAuthenticated:state.isAuthenticated})}));export default useAuthStore;","map":{"version":3,"names":["create","persist","authApi","useAuthStore","set","get","user","loading","isAuthenticated","checkAuth","token","localStorage","getItem","payload","JSON","parse","atob","split","exp","Date","now","email","name","e","console","error","removeItem","signIn","password","response","setItem","data","access_token","public_key","success","message","signUp","publicKey","signOut","partialize","state"],"sources":["/home/sergey/univer/frontend/src/stores/authStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware'; // для сохранения в localStorage\nimport authApi from '../api/auth';\n\nconst useAuthStore = create(\n    persist(\n        (set, get) => ({\n            user: null,\n            loading: false,\n            isAuthenticated: false,\n\n            checkAuth: () => {\n                const token = localStorage.getItem('access_token');\n                if (token) {\n                    try {\n                        const payload = JSON.parse(atob(token.split('.')[1]));\n                        if (payload.exp * 1000 > Date.now()) {\n                            set({\n                                user: {\n                                    email: payload.email,\n                                    name: payload.name,\n                                },\n                                isAuthenticated: true,\n                                loading: false,\n                            });\n                            return;\n                        }\n                    } catch (e) {\n                        console.error('Ошибка при разборе токена:', e);\n                    }\n                    localStorage.removeItem('access_token');\n                }\n                set({ loading: false });\n            },\n\n            signIn: async (email, password) => {\n                set({ loading: true });\n                try {\n                    const response = await authApi.signIn(email, password);\n                    localStorage.setItem('access_token', response.data.access_token);\n                    localStorage.setItem('public_key', response.data.public_key);\n                    set({\n                        user: { email: response.data.email },\n                        isAuthenticated: true,\n                        loading: false,\n                    });\n                    return { success: true };\n                } catch (error) {\n                    set({ loading: false });\n                    return { success: false, error: error.message };\n                }\n            },\n\n            signUp: async (email, password, name, publicKey) => {\n                set({ loading: true });\n                try {\n                    const response = await authApi.signUp(email, password, name, publicKey);\n                    localStorage.setItem('access_token', response.data.access_token);\n                    localStorage.setItem('public_key', response.data.public_key);\n                    set({ loading: false });\n                    return { success: true };\n                } catch (error) {\n                    set({ loading: false });\n                    return { success: false, error: error.message };\n                }\n            },\n\n            signOut: () => {\n                localStorage.removeItem('access_token');\n                set({\n                    user: null,\n                    isAuthenticated: false,\n                });\n            },\n        }),\n        {\n            name: 'auth-storage',\n            partialize: (state) => ({\n                user: state.user,\n                isAuthenticated: state.isAuthenticated,\n            }),\n        }\n    )\n);\n\nexport default useAuthStore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}