{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginSuccess, logout, setLoading } from '../store/authSlice';\nimport authApi from '../api/auth';\nexport function useAuth() {\n  _s();\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const checkAuth = async () => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      dispatch(setLoading(false));\n      return;\n    }\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      if (payload.exp * 1000 > Date.now()) {\n        const userData = await authApi.getCurrentUser();\n        dispatch(loginSuccess(userData));\n      } else {\n        throw new Error('Token expired');\n      }\n    } catch (error) {\n      localStorage.removeItem('access_token');\n      dispatch(logout());\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const signIn = async (email, password) => {\n    dispatch(setLoading(true));\n    try {\n      const response = await authApi.signIn(email, password);\n      localStorage.setItem('access_token', response.access_token);\n      dispatch(loginSuccess(response.user));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signOut = () => {\n    localStorage.removeItem('access_token');\n    dispatch(logout());\n  };\n  return {\n    ...auth,\n    signIn,\n    signOut\n  };\n}\n_s(useAuth, \"KBtZTPIkYdCpQu0nXy4TqigMOz0=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["useEffect","useDispatch","useSelector","loginSuccess","logout","setLoading","authApi","useAuth","_s","dispatch","auth","state","checkAuth","token","localStorage","getItem","payload","JSON","parse","atob","split","exp","Date","now","userData","getCurrentUser","Error","error","removeItem","signIn","email","password","response","setItem","access_token","user","success","message","signOut"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/context/AuthContext.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginSuccess, logout, setLoading } from '../store/authSlice';\nimport authApi from '../api/auth';\n\nexport function useAuth() {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth);\n\n    const checkAuth = async () => {\n        dispatch(setLoading(true));\n        const token = localStorage.getItem('access_token');\n\n        if (!token) {\n            dispatch(setLoading(false));\n            return;\n        }\n\n        try {\n            const payload = JSON.parse(atob(token.split('.')[1]));\n            if (payload.exp * 1000 > Date.now()) {\n                const userData = await authApi.getCurrentUser();\n                dispatch(loginSuccess(userData));\n            } else {\n                throw new Error('Token expired');\n            }\n        } catch (error) {\n            localStorage.removeItem('access_token');\n            dispatch(logout());\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    const signIn = async (email, password) => {\n        dispatch(setLoading(true));\n        try {\n            const response = await authApi.signIn(email, password);\n            localStorage.setItem('access_token', response.access_token);\n            dispatch(loginSuccess(response.user));\n            return { success: true };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    };\n\n    const signOut = () => {\n        localStorage.removeItem('access_token');\n        dispatch(logout());\n    };\n\n    return {\n        ...auth,\n        signIn,\n        signOut\n    };\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,EAAEC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AACrE,OAAOC,OAAO,MAAM,aAAa;AAEjC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAE7C,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1BH,QAAQ,CAACJ,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAElD,IAAI,CAACF,KAAK,EAAE;MACRJ,QAAQ,CAACJ,UAAU,CAAC,KAAK,CAAC,CAAC;MAC3B;IACJ;IAEA,IAAI;MACA,MAAMW,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,IAAIJ,OAAO,CAACK,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACjC,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,cAAc,CAAC,CAAC;QAC/ChB,QAAQ,CAACN,YAAY,CAACqB,QAAQ,CAAC,CAAC;MACpC,CAAC,MAAM;QACH,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;MACpC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZb,YAAY,CAACc,UAAU,CAAC,cAAc,CAAC;MACvCnB,QAAQ,CAACL,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC,SAAS;MACNK,QAAQ,CAACJ,UAAU,CAAC,KAAK,CAAC,CAAC;IAC/B;EACJ,CAAC;EAEDL,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtCtB,QAAQ,CAACJ,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAI;MACA,MAAM2B,QAAQ,GAAG,MAAM1B,OAAO,CAACuB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACtDjB,YAAY,CAACmB,OAAO,CAAC,cAAc,EAAED,QAAQ,CAACE,YAAY,CAAC;MAC3DzB,QAAQ,CAACN,YAAY,CAAC6B,QAAQ,CAACG,IAAI,CAAC,CAAC;MACrC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZ,OAAO;QAAES,OAAO,EAAE,KAAK;QAAET,KAAK,EAAEA,KAAK,CAACU;MAAQ,CAAC;IACnD;EACJ,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClBxB,YAAY,CAACc,UAAU,CAAC,cAAc,CAAC;IACvCnB,QAAQ,CAACL,MAAM,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,OAAO;IACH,GAAGM,IAAI;IACPmB,MAAM;IACNS;EACJ,CAAC;AACL;AAAC9B,EAAA,CAvDeD,OAAO;EAAA,QACFN,WAAW,EACfC,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}