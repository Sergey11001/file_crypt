{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate } from 'react-router-dom';\nimport { generateAesKey, encryptFile, encryptWithPublicKey } from '../utils/crypto';\nimport filesApi from '../api/files';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadFile() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) {\n      const selectedFile = acceptedFiles[0];\n\n      // Проверка размера файла (макс. 50MB)\n      if (selectedFile.size > 50 * 1024 * 1024) {\n        setError('File size exceeds 50MB limit');\n        return;\n      }\n      setFile(selectedFile);\n      setError('');\n      setProgress(0);\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'image/*': ['.png', '.jpg', '.jpeg'],\n      'text/plain': ['.txt']\n    },\n    disabled: isLoading\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select a file');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setProgress(0);\n    try {\n      // 1. Генерация AES ключа для шифрования файла\n      setProgress(5);\n      const aesKey = await generateAesKey();\n\n      // 2. Шифрование файла\n      setProgress(15);\n      const encryptedFile = await encryptFile(file, aesKey);\n\n      // 3. Получение публичного ключа из localStorage\n      setProgress(30);\n      const publicKeyPem = localStorage.getItem('public_key');\n      if (!publicKeyPem) throw new Error('Public key not found in localStorage');\n\n      // 4. Шифрование AES ключа публичным ключом\n      setProgress(45);\n      const encryptedAesKey = await encryptWithPublicKey(aesKey, publicKeyPem);\n\n      // 5. Чтение зашифрованного файла как Base64\n      setProgress(60);\n      const base64Data = await readFileAsBase64(encryptedFile);\n\n      // 6. Отправка на сервер\n      setProgress(75);\n      await filesApi.createFile({\n        name: file.name,\n        symmetric_key: encryptedAesKey,\n        data_base64: base64Data\n      }, progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(75 + percentCompleted * 0.25); // Оставшиеся 25% прогресса\n      });\n      setProgress(100);\n      navigate('/storage/my');\n    } catch (err) {\n      console.error('File upload error:', err);\n      setError(err.message || 'Failed to upload file');\n      setProgress(0);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const readFileAsBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64Data = reader.result.split(',')[1];\n        resolve(base64Data);\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n  const removeFile = () => {\n    setFile(null);\n    setProgress(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"upload-title\",\n        children: \"Upload Private File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-description\",\n        children: \"Files are encrypted before uploading. Only you can decrypt them with your private key.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `dropzone ${isDragActive ? 'active' : ''} ${file ? 'has-file' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: file.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-size\",\n              children: [(file.size / 1024 / 1024).toFixed(2), \" MB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              removeFile();\n            },\n            disabled: isLoading,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-text\",\n            children: isDragActive ? 'Drop the file here' : 'Drag & drop a file, or click to select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-hint\",\n            children: \"Supports: PDF, JPG, PNG, TXT (Max 50MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), progress > 0 && progress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [Math.round(progress), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"icon-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: () => navigate('/storage/my'),\n          disabled: isLoading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"upload-btn\",\n          onClick: handleSubmit,\n          disabled: !file || isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), \"Uploading...\"]\n          }, void 0, true) : 'Encrypt & Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadFile, \"Y1xVZCSGwZaz9ZRNcohJXd/GqEg=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["useState","useCallback","useDropzone","useNavigate","generateAesKey","encryptFile","encryptWithPublicKey","filesApi","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadFile","_s","file","setFile","isLoading","setIsLoading","error","setError","progress","setProgress","navigate","onDrop","acceptedFiles","length","selectedFile","size","getRootProps","getInputProps","isDragActive","maxFiles","accept","disabled","handleSubmit","e","preventDefault","aesKey","encryptedFile","publicKeyPem","localStorage","getItem","Error","encryptedAesKey","base64Data","readFileAsBase64","createFile","name","symmetric_key","data_base64","progressEvent","percentCompleted","Math","round","loaded","total","err","console","message","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","readAsDataURL","removeFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","startsWith","toFixed","onClick","stopPropagation","style","width","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/UploadFile.jsx"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    generateAesKey,\n    encryptFile,\n    encryptWithPublicKey,\n} from '../utils/crypto';\nimport filesApi from '../api/files';\n\nexport default function UploadFile() {\n    const [file, setFile] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const navigate = useNavigate();\n\n    const onDrop = useCallback((acceptedFiles) => {\n        if (acceptedFiles.length) {\n            const selectedFile = acceptedFiles[0];\n\n            // Проверка размера файла (макс. 50MB)\n            if (selectedFile.size > 50 * 1024 * 1024) {\n                setError('File size exceeds 50MB limit');\n                return;\n            }\n\n            setFile(selectedFile);\n            setError('');\n            setProgress(0);\n        }\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        maxFiles: 1,\n        accept: {\n            'application/pdf': ['.pdf'],\n            'image/*': ['.png', '.jpg', '.jpeg'],\n            'text/plain': ['.txt']\n        },\n        disabled: isLoading\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!file) {\n            setError('Please select a file');\n            return;\n        }\n\n        setIsLoading(true);\n        setError('');\n        setProgress(0);\n\n        try {\n            // 1. Генерация AES ключа для шифрования файла\n            setProgress(5);\n            const aesKey = await generateAesKey();\n\n            // 2. Шифрование файла\n            setProgress(15);\n            const encryptedFile = await encryptFile(file, aesKey);\n\n            // 3. Получение публичного ключа из localStorage\n            setProgress(30);\n            const publicKeyPem = localStorage.getItem('public_key');\n            if (!publicKeyPem) throw new Error('Public key not found in localStorage');\n\n            // 4. Шифрование AES ключа публичным ключом\n            setProgress(45);\n            const encryptedAesKey = await encryptWithPublicKey(aesKey, publicKeyPem);\n\n            // 5. Чтение зашифрованного файла как Base64\n            setProgress(60);\n            const base64Data = await readFileAsBase64(encryptedFile);\n\n            // 6. Отправка на сервер\n            setProgress(75);\n            await filesApi.createFile({\n                name: file.name,\n                symmetric_key: encryptedAesKey,\n                data_base64: base64Data\n            }, (progressEvent) => {\n                const percentCompleted = Math.round(\n                    (progressEvent.loaded * 100) / progressEvent.total\n                );\n                setProgress(75 + percentCompleted * 0.25); // Оставшиеся 25% прогресса\n            });\n\n            setProgress(100);\n            navigate('/storage/my');\n        } catch (err) {\n            console.error('File upload error:', err);\n            setError(err.message || 'Failed to upload file');\n            setProgress(0);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const readFileAsBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const base64Data = reader.result.split(',')[1];\n                resolve(base64Data);\n            };\n            reader.onerror = reject;\n            reader.readAsDataURL(file);\n        });\n    };\n\n    const removeFile = () => {\n        setFile(null);\n        setProgress(0);\n    };\n\n    return (\n        <div className=\"upload-page\">\n            <div className=\"upload-container\">\n                <h2 className=\"upload-title\">Upload Private File</h2>\n                <p className=\"upload-description\">\n                    Files are encrypted before uploading. Only you can decrypt them with your private key.\n                </p>\n\n                <div\n                    {...getRootProps()}\n                    className={`dropzone ${isDragActive ? 'active' : ''} ${file ? 'has-file' : ''}`}\n                >\n                    <input {...getInputProps()} />\n                    {file ? (\n                        <div className=\"file-preview\">\n                            <div className=\"file-icon\">\n                                {file.type.startsWith('image/') ? (\n                                    <i className=\"icon-image\"></i>\n                                ) : (\n                                    <i className=\"icon-file\"></i>\n                                )}\n                            </div>\n                            <div className=\"file-info\">\n                                <p className=\"file-name\">{file.name}</p>\n                                <p className=\"file-size\">{(file.size / 1024 / 1024).toFixed(2)} MB</p>\n                            </div>\n                            <button\n                                type=\"button\"\n                                className=\"remove-btn\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    removeFile();\n                                }}\n                                disabled={isLoading}\n                            >\n                                &times;\n                            </button>\n                        </div>\n                    ) : (\n                        <>\n                            <i className=\"icon-upload\"></i>\n                            <p className=\"dropzone-text\">\n                                {isDragActive ? 'Drop the file here' : 'Drag & drop a file, or click to select'}\n                            </p>\n                            <p className=\"dropzone-hint\">Supports: PDF, JPG, PNG, TXT (Max 50MB)</p>\n                        </>\n                    )}\n                </div>\n\n                {progress > 0 && progress < 100 && (\n                    <div className=\"progress-bar\">\n                        <div\n                            className=\"progress-fill\"\n                            style={{ width: `${progress}%` }}\n                        ></div>\n                        <span className=\"progress-text\">{Math.round(progress)}%</span>\n                    </div>\n                )}\n\n                {error && (\n                    <div className=\"error-message\">\n                        <i className=\"icon-error\"></i>\n                        <span>{error}</span>\n                    </div>\n                )}\n\n                <div className=\"actions\">\n                    <button\n                        type=\"button\"\n                        className=\"cancel-btn\"\n                        onClick={() => navigate('/storage/my')}\n                        disabled={isLoading}\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type=\"submit\"\n                        className=\"upload-btn\"\n                        onClick={handleSubmit}\n                        disabled={!file || isLoading}\n                    >\n                        {isLoading ? (\n                            <>\n                                <i className=\"icon-spinner\"></i>\n                                Uploading...\n                            </>\n                        ) : (\n                            'Encrypt & Upload'\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}