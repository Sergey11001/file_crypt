{"ast":null,"code":"import{useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import filesApi from'../api/files';import{toast}from'react-toastify';import{saveAs}from\"file-saver\";import{jsx as _jsx}from\"react/jsx-runtime\";export const FileDownloadRedirect=()=>{const{id}=useParams();const navigate=useNavigate();useEffect(()=>{const downloadFile=async()=>{try{if(!id){throw new Error('File ID not specified');}const response=await filesApi.downloadCommonFile(id);const contentDisposition=response.headers.get('Content-Disposition');let fileName='downloaded_file.pdf';if(contentDisposition){let match=contentDisposition.match(/filename\\*=(?:UTF-8'')?([^;]+)/i);if(match&&match[1]){fileName=decodeURIComponent(match[1].replace(/['\"]/g,'').trim());}else{match=contentDisposition.match(/filename=([^;]+)/i);if(match&&match[1]){fileName=match[1].replace(/['\"]/g,'').trim();fileName=fixEncoding(fileName);// ← тут магия\n}}}const blob=new Blob([response.data]);saveAs(blob,fileName);navigate(-1);}catch(e){toast.error('Не удалось загрузить файл');navigate('/storage/my');}};downloadFile();},[id,navigate]);return/*#__PURE__*/_jsx(\"div\",{children:\"Downloading file...\"});};const fixEncoding=str=>{try{const bytes=new Uint8Array([...str].map(ch=>ch.charCodeAt(0)));const decoder=new TextDecoder('utf-8');return decoder.decode(bytes);}catch(_unused){return str;}};","map":{"version":3,"names":["useEffect","useParams","useNavigate","filesApi","toast","saveAs","jsx","_jsx","FileDownloadRedirect","id","navigate","downloadFile","Error","response","downloadCommonFile","contentDisposition","headers","get","fileName","match","decodeURIComponent","replace","trim","fixEncoding","blob","Blob","data","e","error","children","str","bytes","Uint8Array","map","ch","charCodeAt","decoder","TextDecoder","decode","_unused"],"sources":["/home/sergey/univer/frontend/src/components/FileDownloadRedirect.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport filesApi  from '../api/files';\nimport { toast } from 'react-toastify';\nimport { saveAs } from \"file-saver\";\n\nexport const FileDownloadRedirect = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const downloadFile = async () => {\n            try {\n                if (!id) {\n                    throw new Error('File ID not specified');\n                }\n\n                const response = await filesApi.downloadCommonFile(id);\n\n                const contentDisposition = response.headers.get('Content-Disposition');\n                let fileName = 'downloaded_file.pdf';\n\n                if (contentDisposition) {\n                    let match = contentDisposition.match(/filename\\*=(?:UTF-8'')?([^;]+)/i);\n                    if (match && match[1]) {\n                        fileName = decodeURIComponent(match[1].replace(/['\"]/g, '').trim());\n                    } else {\n                        match = contentDisposition.match(/filename=([^;]+)/i);\n                        if (match && match[1]) {\n                            fileName = match[1].replace(/['\"]/g, '').trim();\n                            fileName = fixEncoding(fileName); // ← тут магия\n                        }\n                    }\n                }\n\n                const blob = new Blob([response.data]);\n\n                saveAs(blob, fileName);\n\n                navigate(-1);\n                } catch (e) {\n                    toast.error('Не удалось загрузить файл');\n                    navigate('/storage/my');\n                }\n            };\n\n            downloadFile();\n        }, [id, navigate]);\n\n        return <div>Downloading file...</div>;\n    }\n\nconst fixEncoding = (str) => {\n    try {\n        const bytes = new Uint8Array([...str].map(ch => ch.charCodeAt(0)));\n        const decoder = new TextDecoder('utf-8');\n        return decoder.decode(bytes);\n    } catch {\n        return str;\n    }\n};"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,QAAQ,KAAO,cAAc,CACpC,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,MAAM,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,MAAO,MAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAAEC,EAAG,CAAC,CAAGR,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAAS,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAW,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACA,GAAI,CAACF,EAAE,CAAE,CACL,KAAM,IAAI,CAAAG,KAAK,CAAC,uBAAuB,CAAC,CAC5C,CAEA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,QAAQ,CAACW,kBAAkB,CAACL,EAAE,CAAC,CAEtD,KAAM,CAAAM,kBAAkB,CAAGF,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACtE,GAAI,CAAAC,QAAQ,CAAG,qBAAqB,CAEpC,GAAIH,kBAAkB,CAAE,CACpB,GAAI,CAAAI,KAAK,CAAGJ,kBAAkB,CAACI,KAAK,CAAC,iCAAiC,CAAC,CACvE,GAAIA,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,CAAE,CACnBD,QAAQ,CAAGE,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACvE,CAAC,IAAM,CACHH,KAAK,CAAGJ,kBAAkB,CAACI,KAAK,CAAC,mBAAmB,CAAC,CACrD,GAAIA,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,CAAE,CACnBD,QAAQ,CAAGC,KAAK,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAC/CJ,QAAQ,CAAGK,WAAW,CAACL,QAAQ,CAAC,CAAE;AACtC,CACJ,CACJ,CAEA,KAAM,CAAAM,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACZ,QAAQ,CAACa,IAAI,CAAC,CAAC,CAEtCrB,MAAM,CAACmB,IAAI,CAAEN,QAAQ,CAAC,CAEtBR,QAAQ,CAAC,CAAC,CAAC,CAAC,CACZ,CAAE,MAAOiB,CAAC,CAAE,CACRvB,KAAK,CAACwB,KAAK,CAAC,2BAA2B,CAAC,CACxClB,QAAQ,CAAC,aAAa,CAAC,CAC3B,CACJ,CAAC,CAEDC,YAAY,CAAC,CAAC,CAClB,CAAC,CAAE,CAACF,EAAE,CAAEC,QAAQ,CAAC,CAAC,CAElB,mBAAOH,IAAA,QAAAsB,QAAA,CAAK,qBAAmB,CAAK,CAAC,CACzC,CAAC,CAEL,KAAM,CAAAN,WAAW,CAAIO,GAAG,EAAK,CACzB,GAAI,CACA,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,GAAGF,GAAG,CAAC,CAACG,GAAG,CAACC,EAAE,EAAIA,EAAE,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAClE,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAC,WAAW,CAAC,OAAO,CAAC,CACxC,MAAO,CAAAD,OAAO,CAACE,MAAM,CAACP,KAAK,CAAC,CAChC,CAAE,MAAAQ,OAAA,CAAM,CACJ,MAAO,CAAAT,GAAG,CACd,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}