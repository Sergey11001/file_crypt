{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate } from 'react-router-dom';\nimport { encryptFile, encryptWithPublicKey, generateAesKey } from '../utils/crypto';\nimport filesApi from '../api/files';\nimport usersApi from '../api/users';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadFile() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [accessType, setAccessType] = useState('private');\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [recipientPublicKey, setRecipientPublicKey] = useState(null);\n  const [recipientUuid, setRecipientUuid] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const navigate = useNavigate();\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) {\n      const selectedFile = acceptedFiles[0];\n\n      // Проверка размера файла (макс. 50MB)\n      if (selectedFile.size > 50 * 1024 * 1024) {\n        setError('File size exceeds 50MB limit');\n        return;\n      }\n      setFile(selectedFile);\n      setError('');\n      setProgress(0);\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'image/*': ['.png', '.jpg', '.jpeg'],\n      'text/plain': ['.txt']\n    },\n    disabled: isLoading\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select a file');\n      return;\n    }\n    if (accessType === 'specific' && !recipientEmail) {\n      setError('Please enter recipient email');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setProgress(0);\n    try {\n      let symmetricKey = null;\n      let encryptedAesKey = null;\n      if (accessType === 'private' || accessType === 'specific') {\n        setProgress(5);\n        symmetricKey = await generateAesKey();\n      }\n      if (accessType === 'private') {\n        setProgress(15);\n        const publicKeyPem = localStorage.getItem('public_key');\n        if (!publicKeyPem) throw new Error('Public key not found in localStorage');\n        encryptedAesKey = await encryptWithPublicKey(aesKey, publicKeyPem);\n      }\n      setProgress(30);\n      const fileToUpload = accessType === 'private' ? await encryptFile(file, symmetricKey) : file;\n      setProgress(50);\n      const base64Data = await readFileAsBase64(fileToUpload);\n      const uploadData = {\n        name: file.name,\n        data_base64: base64Data\n      };\n      if (accessType === 'private') {\n        uploadData.symmetric_key = encryptedAesKey;\n      }\n      if (accessType === 'specific') {\n        const response = await usersApi.getUsers();\n        uploadData.recipient_email = recipientEmail;\n      }\n      setProgress(75);\n      await filesApi.createFile(uploadData, progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(75 + percentCompleted * 0.25);\n      });\n      setProgress(100);\n      navigate('/storage/my');\n    } catch (err) {\n      console.error('File upload error:', err);\n      setError(err.message || 'Failed to upload file');\n      setProgress(0);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const readFileAsBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64Data = reader.result.split(',')[1];\n        resolve(base64Data);\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n  const removeFile = () => {\n    setFile(null);\n    setProgress(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"upload-title\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-description\",\n        children: accessType === 'private' ? 'Files are encrypted before uploading. Only you can decrypt them.' : accessType === 'public' ? 'Files will be accessible to anyone with the link.' : 'Files will be encrypted for the specific recipient.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `dropzone ${isDragActive ? 'active' : ''} ${file ? 'has-file' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: file.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-size\",\n              children: [(file.size / 1024 / 1024).toFixed(2), \" MB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              removeFile();\n            },\n            disabled: isLoading,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-text\",\n            children: isDragActive ? 'Drop the file here' : 'Drag & drop a file, or click to select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-hint\",\n            children: \"Supports: PDF, JPG, PNG, TXT (Max 50MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"access-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"access-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"access-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"accessType\",\n              value: \"private\",\n              checked: accessType === 'private',\n              onChange: () => setAccessType('private')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"access-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon-lock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), \" Private (only me)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"access-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"accessType\",\n              value: \"public\",\n              checked: accessType === 'public',\n              onChange: () => setAccessType('public')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"access-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon-globe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), \" Public (anyone with link)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"access-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"accessType\",\n              value: \"specific\",\n              checked: accessType === 'specific',\n              onChange: () => setAccessType('specific')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"access-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon-user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), \" Specific person\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), accessType === 'specific' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipient-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipientEmail\",\n            children: \"Recipient Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"recipientEmail\",\n            value: recipientEmail,\n            onChange: e => setRecipientEmail(e.target.value),\n            placeholder: \"Enter recipient's email\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), progress > 0 && progress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [Math.round(progress), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"icon-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: () => navigate('/storage/my'),\n          disabled: isLoading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"upload-btn\",\n          onClick: handleSubmit,\n          disabled: !file || isLoading || accessType === 'specific' && !recipientEmail,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), accessType === 'private' ? 'Encrypting & Uploading...' : 'Uploading...']\n          }, void 0, true) : accessType === 'private' ? 'Encrypt & Upload' : 'Upload File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadFile, \"CzwEfnrnHzCxJ+mMBeeefZqXBnY=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["useCallback","useState","useDropzone","useNavigate","encryptFile","encryptWithPublicKey","generateAesKey","filesApi","usersApi","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadFile","_s","file","setFile","accessType","setAccessType","recipientEmail","setRecipientEmail","recipientPublicKey","setRecipientPublicKey","recipientUuid","setRecipientUuid","isLoading","setIsLoading","error","setError","progress","setProgress","navigate","onDrop","acceptedFiles","length","selectedFile","size","getRootProps","getInputProps","isDragActive","maxFiles","accept","disabled","handleSubmit","e","preventDefault","symmetricKey","encryptedAesKey","publicKeyPem","localStorage","getItem","Error","aesKey","fileToUpload","base64Data","readFileAsBase64","uploadData","name","data_base64","symmetric_key","response","getUsers","recipient_email","createFile","progressEvent","percentCompleted","Math","round","loaded","total","err","console","message","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","readAsDataURL","removeFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","startsWith","toFixed","onClick","stopPropagation","value","checked","onChange","htmlFor","id","target","placeholder","style","width","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/UploadFile.jsx"],"sourcesContent":["import {useCallback, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {useNavigate} from 'react-router-dom';\nimport {encryptFile, encryptWithPublicKey, generateAesKey,} from '../utils/crypto';\nimport filesApi from '../api/files';\nimport usersApi from '../api/users';\n\nexport default function UploadFile() {\n    const [file, setFile] = useState(null);\n    const [accessType, setAccessType] = useState('private');\n    const [recipientEmail, setRecipientEmail] = useState('');\n    const [recipientPublicKey, setRecipientPublicKey] = useState(null);\n    const [recipientUuid, setRecipientUuid] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [progress, setProgress] = useState(0);\n    const navigate = useNavigate();\n\n    const onDrop = useCallback((acceptedFiles) => {\n        if (acceptedFiles.length) {\n            const selectedFile = acceptedFiles[0];\n\n            // Проверка размера файла (макс. 50MB)\n            if (selectedFile.size > 50 * 1024 * 1024) {\n                setError('File size exceeds 50MB limit');\n                return;\n            }\n\n            setFile(selectedFile);\n            setError('');\n            setProgress(0);\n        }\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        maxFiles: 1,\n        accept: {\n            'application/pdf': ['.pdf'],\n            'image/*': ['.png', '.jpg', '.jpeg'],\n            'text/plain': ['.txt']\n        },\n        disabled: isLoading\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!file) {\n            setError('Please select a file');\n            return;\n        }\n        if (accessType === 'specific' && !recipientEmail) {\n            setError('Please enter recipient email');\n            return;\n        }\n\n        setIsLoading(true);\n        setError('');\n        setProgress(0);\n\n        try {\n            let symmetricKey = null;\n            let encryptedAesKey = null;\n\n            if (accessType === 'private' || accessType === 'specific') {\n                setProgress(5);\n                symmetricKey = await generateAesKey();\n            }\n\n            if (accessType === 'private') {\n                setProgress(15);\n                const publicKeyPem = localStorage.getItem('public_key');\n                if (!publicKeyPem) throw new Error('Public key not found in localStorage');\n\n                encryptedAesKey = await encryptWithPublicKey(aesKey, publicKeyPem);\n            }\n\n            setProgress(30);\n            const fileToUpload = accessType === 'private'\n                ? await encryptFile(file, symmetricKey)\n                : file;\n\n            setProgress(50);\n            const base64Data = await readFileAsBase64(fileToUpload);\n\n            const uploadData = {\n                name: file.name,\n                data_base64: base64Data,\n            };\n\n            if (accessType === 'private') {\n                uploadData.symmetric_key = encryptedAesKey;\n            }\n\n            if (accessType === 'specific') {\n                const response = await usersApi.getUsers();\n\n                uploadData.recipient_email = recipientEmail;\n            }\n\n            setProgress(75);\n            await filesApi.createFile(uploadData, (progressEvent) => {\n                const percentCompleted = Math.round(\n                    (progressEvent.loaded * 100) / progressEvent.total\n                );\n                setProgress(75 + percentCompleted * 0.25);\n            });\n\n            setProgress(100);\n            navigate('/storage/my');\n        } catch (err) {\n            console.error('File upload error:', err);\n            setError(err.message || 'Failed to upload file');\n            setProgress(0);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const readFileAsBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const base64Data = reader.result.split(',')[1];\n                resolve(base64Data);\n            };\n            reader.onerror = reject;\n            reader.readAsDataURL(file);\n        });\n    };\n\n    const removeFile = () => {\n        setFile(null);\n        setProgress(0);\n    };\n\n    return (\n        <div className=\"upload-page\">\n            <div className=\"upload-container\">\n                <h2 className=\"upload-title\">Upload File</h2>\n                <p className=\"upload-description\">\n                    {accessType === 'private'\n                        ? 'Files are encrypted before uploading. Only you can decrypt them.'\n                        : accessType === 'public'\n                            ? 'Files will be accessible to anyone with the link.'\n                            : 'Files will be encrypted for the specific recipient.'}\n                </p>\n\n                <div\n                    {...getRootProps()}\n                    className={`dropzone ${isDragActive ? 'active' : ''} ${file ? 'has-file' : ''}`}\n                >\n                    <input {...getInputProps()} />\n                    {file ? (\n                        <div className=\"file-preview\">\n                            <div className=\"file-icon\">\n                                {file.type.startsWith('image/') ? (\n                                    <i className=\"icon-image\"></i>\n                                ) : (\n                                    <i className=\"icon-file\"></i>\n                                )}\n                            </div>\n                            <div className=\"file-info\">\n                                <p className=\"file-name\">{file.name}</p>\n                                <p className=\"file-size\">{(file.size / 1024 / 1024).toFixed(2)} MB</p>\n                            </div>\n                            <button\n                                type=\"button\"\n                                className=\"remove-btn\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    removeFile();\n                                }}\n                                disabled={isLoading}\n                            >\n                                &times;\n                            </button>\n                        </div>\n                    ) : (\n                        <>\n                            <i className=\"icon-upload\"></i>\n                            <p className=\"dropzone-text\">\n                                {isDragActive ? 'Drop the file here' : 'Drag & drop a file, or click to select'}\n                            </p>\n                            <p className=\"dropzone-hint\">Supports: PDF, JPG, PNG, TXT (Max 50MB)</p>\n                        </>\n                    )}\n                </div>\n\n                <div className=\"access-controls\">\n                    <div className=\"access-options\">\n                        <label className=\"access-option\">\n                            <input\n                                type=\"radio\"\n                                name=\"accessType\"\n                                value=\"private\"\n                                checked={accessType === 'private'}\n                                onChange={() => setAccessType('private')}\n                            />\n                            <span className=\"access-label\">\n                <i className=\"icon-lock\"></i> Private (only me)\n              </span>\n                        </label>\n\n                        <label className=\"access-option\">\n                            <input\n                                type=\"radio\"\n                                name=\"accessType\"\n                                value=\"public\"\n                                checked={accessType === 'public'}\n                                onChange={() => setAccessType('public')}\n                            />\n                            <span className=\"access-label\">\n                <i className=\"icon-globe\"></i> Public (anyone with link)\n              </span>\n                        </label>\n\n                        <label className=\"access-option\">\n                            <input\n                                type=\"radio\"\n                                name=\"accessType\"\n                                value=\"specific\"\n                                checked={accessType === 'specific'}\n                                onChange={() => setAccessType('specific')}\n                            />\n                            <span className=\"access-label\">\n                <i className=\"icon-user\"></i> Specific person\n              </span>\n                        </label>\n                    </div>\n\n                    {accessType === 'specific' && (\n                        <div className=\"recipient-input\">\n                            <label htmlFor=\"recipientEmail\">Recipient Email:</label>\n                            <input\n                                type=\"email\"\n                                id=\"recipientEmail\"\n                                value={recipientEmail}\n                                onChange={(e) => setRecipientEmail(e.target.value)}\n                                placeholder=\"Enter recipient's email\"\n                                disabled={isLoading}\n                            />\n                        </div>\n                    )}\n                </div>\n\n                {progress > 0 && progress < 100 && (\n                    <div className=\"progress-bar\">\n                        <div\n                            className=\"progress-fill\"\n                            style={{ width: `${progress}%` }}\n                        ></div>\n                        <span className=\"progress-text\">{Math.round(progress)}%</span>\n                    </div>\n                )}\n\n                {error && (\n                    <div className=\"error-message\">\n                        <i className=\"icon-error\"></i>\n                        <span>{error}</span>\n                    </div>\n                )}\n\n                <div className=\"actions\">\n                    <button\n                        type=\"button\"\n                        className=\"cancel-btn\"\n                        onClick={() => navigate('/storage/my')}\n                        disabled={isLoading}\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type=\"submit\"\n                        className=\"upload-btn\"\n                        onClick={handleSubmit}\n                        disabled={!file || isLoading || (accessType === 'specific' && !recipientEmail)}\n                    >\n                        {isLoading ? (\n                            <>\n                                <i className=\"icon-spinner\"></i>\n                                {accessType === 'private' ? 'Encrypting & Uploading...' : 'Uploading...'}\n                            </>\n                        ) : (\n                            accessType === 'private' ? 'Encrypt & Upload' : 'Upload File'\n                        )}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}