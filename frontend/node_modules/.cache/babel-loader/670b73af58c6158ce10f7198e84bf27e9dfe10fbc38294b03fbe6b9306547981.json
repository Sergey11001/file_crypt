{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/MyFiles.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport filesApi from '../../api/files';\nimport FileItem from '../components/FileItem';\nimport { formatBytes, formatDate } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyFiles() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await filesApi.getMyFiles();\n        setFiles(response.files);\n      } catch (err) {\n        setError(err.message || 'Failed to load files');\n        console.error('File loading error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, []);\n  const handleDownload = async fileUuid => {\n    try {\n      // Здесь будет логика скачивания файла\n      console.log('Downloading file:', fileUuid);\n    } catch (err) {\n      console.error('Download error:', err);\n    }\n  };\n  const handleShare = fileUuid => {\n    // Здесь будет логика открытия модалки для шаринга\n    console.log('Sharing file:', fileUuid);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading files...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-list\",\n    children: files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(FileItem, {\n      file: {\n        id: file.uuid,\n        name: file.name,\n        size: formatBytes(file.size),\n        date: formatDate(file.created_at),\n        encryptedKey: file.symmetric_key\n      },\n      onDownload: handleDownload,\n      onShare: handleShare,\n      isOwner: true\n    }, file.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-message\",\n      children: \"You don't have any files yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(MyFiles, \"bBlKMMPc88tWNoGK3W3qtzn0Zyg=\", false, function () {\n  return [useAuth];\n});\n_c = MyFiles;\nvar _c;\n$RefreshReg$(_c, \"MyFiles\");","map":{"version":3,"names":["useState","useEffect","useAuth","filesApi","FileItem","formatBytes","formatDate","jsxDEV","_jsxDEV","MyFiles","_s","files","setFiles","loading","setLoading","error","setError","user","fetchFiles","response","getMyFiles","err","message","console","handleDownload","fileUuid","log","handleShare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","file","id","uuid","name","size","date","created_at","encryptedKey","symmetric_key","onDownload","onShare","isOwner","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/MyFiles.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport filesApi from '../../api/files';\nimport FileItem from '../components/FileItem';\nimport { formatBytes, formatDate } from '../../utils/helpers';\n\nexport default function MyFiles() {\n    const [files, setFiles] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const { user } = useAuth();\n\n    useEffect(() => {\n        const fetchFiles = async () => {\n            try {\n                const response = await filesApi.getMyFiles();\n                setFiles(response.files);\n            } catch (err) {\n                setError(err.message || 'Failed to load files');\n                console.error('File loading error:', err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchFiles();\n    }, []);\n\n    const handleDownload = async (fileUuid) => {\n        try {\n            // Здесь будет логика скачивания файла\n            console.log('Downloading file:', fileUuid);\n        } catch (err) {\n            console.error('Download error:', err);\n        }\n    };\n\n    const handleShare = (fileUuid) => {\n        // Здесь будет логика открытия модалки для шаринга\n        console.log('Sharing file:', fileUuid);\n    };\n\n    if (loading) return <div className=\"loading\">Loading files...</div>;\n    if (error) return <div className=\"error\">{error}</div>;\n\n    return (\n        <div className=\"files-list\">\n            {files.length > 0 ? (\n                files.map((file) => (\n                    <FileItem\n                        key={file.uuid}\n                        file={{\n                            id: file.uuid,\n                            name: file.name,\n                            size: formatBytes(file.size),\n                            date: formatDate(file.created_at),\n                            encryptedKey: file.symmetric_key\n                        }}\n                        onDownload={handleDownload}\n                        onShare={handleShare}\n                        isOwner={true}\n                    />\n                ))\n            ) : (\n                <p className=\"empty-message\">You don't have any files yet</p>\n            )}\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,WAAW,EAAEC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEiB;EAAK,CAAC,GAAGf,OAAO,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACZ,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACiB,UAAU,CAAC,CAAC;QAC5CR,QAAQ,CAACO,QAAQ,CAACR,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOU,GAAG,EAAE;QACVL,QAAQ,CAACK,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;QAC/CC,OAAO,CAACR,KAAK,CAAC,qBAAqB,EAAEM,GAAG,CAAC;MAC7C,CAAC,SAAS;QACNP,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDI,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACA;MACAF,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC9C,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACVE,OAAO,CAACR,KAAK,CAAC,iBAAiB,EAAEM,GAAG,CAAC;IACzC;EACJ,CAAC;EAED,MAAMM,WAAW,GAAIF,QAAQ,IAAK;IAC9B;IACAF,OAAO,CAACG,GAAG,CAAC,eAAe,EAAED,QAAQ,CAAC;EAC1C,CAAC;EAED,IAAIZ,OAAO,EAAE,oBAAOL,OAAA;IAAKoB,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnE,IAAIlB,KAAK,EAAE,oBAAOP,OAAA;IAAKoB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAEd;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEtD,oBACIzB,OAAA;IAAKoB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACtBlB,KAAK,CAACuB,MAAM,GAAG,CAAC,GACbvB,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACX5B,OAAA,CAACJ,QAAQ;MAELgC,IAAI,EAAE;QACFC,EAAE,EAAED,IAAI,CAACE,IAAI;QACbC,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,IAAI,EAAEnC,WAAW,CAAC+B,IAAI,CAACI,IAAI,CAAC;QAC5BC,IAAI,EAAEnC,UAAU,CAAC8B,IAAI,CAACM,UAAU,CAAC;QACjCC,YAAY,EAAEP,IAAI,CAACQ;MACvB,CAAE;MACFC,UAAU,EAAErB,cAAe;MAC3BsB,OAAO,EAAEnB,WAAY;MACrBoB,OAAO,EAAE;IAAK,GAVTX,IAAI,CAACE,IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWjB,CACJ,CAAC,gBAEFzB,OAAA;MAAGoB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC/D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACvB,EAAA,CA9DuBD,OAAO;EAAA,QAIVP,OAAO;AAAA;AAAA8C,EAAA,GAJJvC,OAAO;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}