{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/UploadFile.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDropzone } from 'react-dropzone';\nimport filesApi from '../../api/files';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadFile() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [recipientEmail, setRecipientEmail] = useState('');\n  const [accessType, setAccessType] = useState('private');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const onDrop = useCallback(acceptedFiles => {\n    if (acceptedFiles.length) {\n      setFile(acceptedFiles[0]);\n      setError('');\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    maxFiles: 1,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'image/*': ['.png', '.jpg', '.jpeg'],\n      'text/plain': ['.txt']\n    }\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select a file');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('access_type', accessType);\n      if (accessType === 'specific') {\n        formData.append('recipient_email', recipientEmail);\n      }\n      await filesApi.uploadFile(formData);\n      navigate('/storage/my');\n    } catch (err) {\n      setError(err.message || 'File upload failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"upload-title\",\n        children: \"Upload New File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `dropzone ${isDragActive ? 'active' : ''} ${file ? 'has-file' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: file.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-size\",\n              children: [(file.size / 1024 / 1024).toFixed(2), \" MB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-btn\",\n            onClick: e => {\n              e.stopPropagation();\n              setFile(null);\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-text\",\n            children: isDragActive ? 'Drop the file here' : 'Drag & drop a file, or click to select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dropzone-hint\",\n            children: \"Supports: PDF, JPG, PNG, TXT (Max 50MB)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Access Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"accessType\",\n                value: \"private\",\n                checked: accessType === 'private',\n                onChange: () => setAccessType('private')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"radio-label\",\n                children: \"Private (only me)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"accessType\",\n                value: \"public\",\n                checked: accessType === 'public',\n                onChange: () => setAccessType('public')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"radio-label\",\n                children: \"Public (anyone with link)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"accessType\",\n                value: \"specific\",\n                checked: accessType === 'specific',\n                onChange: () => setAccessType('specific')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"radio-label\",\n                children: \"Specific person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), accessType === 'specific' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipientEmail\",\n            children: \"Recipient Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"recipientEmail\",\n            value: recipientEmail,\n            onChange: e => setRecipientEmail(e.target.value),\n            placeholder: \"Enter recipient's email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"upload-btn\",\n          disabled: !file || isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), \" Uploading...\"]\n          }, void 0, true) : 'Upload File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadFile, \"3cA5SuuxO28K5E201M5RvLrKO3g=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = UploadFile;\nvar _c;\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"names":["useState","useCallback","useNavigate","useDropzone","filesApi","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadFile","_s","file","setFile","recipientEmail","setRecipientEmail","accessType","setAccessType","isLoading","setIsLoading","error","setError","navigate","onDrop","acceptedFiles","length","getRootProps","getInputProps","isDragActive","maxFiles","accept","handleSubmit","e","preventDefault","formData","FormData","append","uploadFile","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","startsWith","name","size","toFixed","onClick","stopPropagation","onSubmit","value","checked","onChange","htmlFor","id","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/UploadFile.jsx"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDropzone } from 'react-dropzone';\nimport filesApi from '../../api/files';\n\nexport default function UploadFile() {\n    const [file, setFile] = useState(null);\n    const [recipientEmail, setRecipientEmail] = useState('');\n    const [accessType, setAccessType] = useState('private');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const onDrop = useCallback((acceptedFiles) => {\n        if (acceptedFiles.length) {\n            setFile(acceptedFiles[0]);\n            setError('');\n        }\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        maxFiles: 1,\n        accept: {\n            'application/pdf': ['.pdf'],\n            'image/*': ['.png', '.jpg', '.jpeg'],\n            'text/plain': ['.txt']\n        }\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!file) {\n            setError('Please select a file');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const formData = new FormData();\n            formData.append('file', file);\n            formData.append('access_type', accessType);\n\n            if (accessType === 'specific') {\n                formData.append('recipient_email', recipientEmail);\n            }\n\n            await filesApi.uploadFile(formData);\n            navigate('/storage/my');\n        } catch (err) {\n            setError(err.message || 'File upload failed');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"upload-page\">\n            <div className=\"upload-container\">\n                <h2 className=\"upload-title\">Upload New File</h2>\n\n                <div\n                    {...getRootProps()}\n                    className={`dropzone ${isDragActive ? 'active' : ''} ${file ? 'has-file' : ''}`}\n                >\n                    <input {...getInputProps()} />\n                    {file ? (\n                        <div className=\"file-preview\">\n                            <div className=\"file-icon\">\n                                {file.type.startsWith('image/') ? (\n                                    <i className=\"icon-image\"></i>\n                                ) : (\n                                    <i className=\"icon-file\"></i>\n                                )}\n                            </div>\n                            <div className=\"file-info\">\n                                <p className=\"file-name\">{file.name}</p>\n                                <p className=\"file-size\">{(file.size / 1024 / 1024).toFixed(2)} MB</p>\n                            </div>\n                            <button\n                                type=\"button\"\n                                className=\"remove-btn\"\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    setFile(null);\n                                }}\n                            >\n                                &times;\n                            </button>\n                        </div>\n                    ) : (\n                        <>\n                            <i className=\"icon-upload\"></i>\n                            <p className=\"dropzone-text\">\n                                {isDragActive ? 'Drop the file here' : 'Drag & drop a file, or click to select'}\n                            </p>\n                            <p className=\"dropzone-hint\">Supports: PDF, JPG, PNG, TXT (Max 50MB)</p>\n                        </>\n                    )}\n                </div>\n\n                {error && <div className=\"error-message\">{error}</div>}\n\n                <form onSubmit={handleSubmit} className=\"upload-form\">\n                    <div className=\"form-group\">\n                        <label>Access Type:</label>\n                        <div className=\"radio-group\">\n                            <label className=\"radio-option\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"accessType\"\n                                    value=\"private\"\n                                    checked={accessType === 'private'}\n                                    onChange={() => setAccessType('private')}\n                                />\n                                <span className=\"radio-label\">Private (only me)</span>\n                            </label>\n\n                            <label className=\"radio-option\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"accessType\"\n                                    value=\"public\"\n                                    checked={accessType === 'public'}\n                                    onChange={() => setAccessType('public')}\n                                />\n                                <span className=\"radio-label\">Public (anyone with link)</span>\n                            </label>\n\n                            <label className=\"radio-option\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"accessType\"\n                                    value=\"specific\"\n                                    checked={accessType === 'specific'}\n                                    onChange={() => setAccessType('specific')}\n                                />\n                                <span className=\"radio-label\">Specific person</span>\n                            </label>\n                        </div>\n                    </div>\n\n                    {accessType === 'specific' && (\n                        <div className=\"form-group\">\n                            <label htmlFor=\"recipientEmail\">Recipient Email:</label>\n                            <input\n                                type=\"email\"\n                                id=\"recipientEmail\"\n                                value={recipientEmail}\n                                onChange={(e) => setRecipientEmail(e.target.value)}\n                                placeholder=\"Enter recipient's email\"\n                                required\n                            />\n                        </div>\n                    )}\n\n                    <button\n                        type=\"submit\"\n                        className=\"upload-btn\"\n                        disabled={!file || isLoading}\n                    >\n                        {isLoading ? (\n                            <>\n                                <span className=\"spinner\"></span> Uploading...\n                            </>\n                        ) : (\n                            'Upload File'\n                        )}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}