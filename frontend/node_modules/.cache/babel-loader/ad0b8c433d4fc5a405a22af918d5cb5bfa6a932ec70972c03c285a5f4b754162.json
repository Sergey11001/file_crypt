{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport authApi from '../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const signIn = async (email, password) => {\n    setLoading(true);\n    try {\n      const response = await authApi.signIn(email, password);\n      setUser({\n        email,\n        accessToken: response.access_token,\n        publicKey: response.public_key\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signUp = async (email, password, name, publicKey) => {\n    setLoading(true);\n    try {\n      const response = await authApi.signUp(email, password, name, publicKey);\n      setUser({\n        email,\n        accessToken: response.access_token,\n        publicKey: response.public_key\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut: () => setUser(null)\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n_s(AuthProvider, \"wTzXmCFe6HlddNT0jYEkR+YkPsQ=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","authApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","signIn","email","password","response","accessToken","access_token","publicKey","public_key","success","error","signUp","name","value","signOut","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\nimport authApi from '../api/auth';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const signIn = async (email, password) => {\n        setLoading(true);\n        try {\n            const response = await authApi.signIn(email, password);\n            setUser({\n                email,\n                accessToken: response.access_token,\n                publicKey: response.public_key\n            });\n            return { success: true };\n        } catch (error) {\n            return { success: false, error };\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const signUp = async (email, password, name, publicKey) => {\n        setLoading(true);\n        try {\n            const response = await authApi.signUp(email, password, name, publicKey);\n            setUser({\n                email,\n                accessToken: response.access_token,\n                publicKey: response.public_key\n            });\n            return { success: true };\n        } catch (error) {\n            return { success: false, error };\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const value = {\n        user,\n        loading,\n        signIn,\n        signUp,\n        signOut: () => setUser(null)\n    };\n\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtCH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMd,OAAO,CAACW,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACtDL,OAAO,CAAC;QACJI,KAAK;QACLG,WAAW,EAAED,QAAQ,CAACE,YAAY;QAClCC,SAAS,EAAEH,QAAQ,CAACI;MACxB,CAAC,CAAC;MACF,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC;MAAM,CAAC;IACpC,CAAC,SAAS;MACNV,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMW,MAAM,GAAG,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,EAAES,IAAI,EAAEL,SAAS,KAAK;IACvDP,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMd,OAAO,CAACqB,MAAM,CAACT,KAAK,EAAEC,QAAQ,EAAES,IAAI,EAAEL,SAAS,CAAC;MACvET,OAAO,CAAC;QACJI,KAAK;QACLG,WAAW,EAAED,QAAQ,CAACE,YAAY;QAClCC,SAAS,EAAEH,QAAQ,CAACI;MACxB,CAAC,CAAC;MACF,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC;MAAM,CAAC;IACpC,CAAC,SAAS;MACNV,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMa,KAAK,GAAG;IACVhB,IAAI;IACJE,OAAO;IACPE,MAAM;IACNU,MAAM;IACNG,OAAO,EAAEA,CAAA,KAAMhB,OAAO,CAAC,IAAI;EAC/B,CAAC;EAED,oBAAON,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAAEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF;AAACvB,EAAA,CA/CeF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAiD5B,OAAO,SAAS2B,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAOlC,UAAU,CAACK,WAAW,CAAC;AAClC;AAAC6B,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}