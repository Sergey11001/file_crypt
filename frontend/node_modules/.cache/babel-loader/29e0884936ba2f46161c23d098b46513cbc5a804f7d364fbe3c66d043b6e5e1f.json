{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/SharedFiles.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport FileItem from '../components/FileItem';\nimport filesApi from \"../api/files\";\nimport { formatBytes, formatDate } from \"../utils/helpers\";\nimport { decryptFile } from \"../utils/crypto\";\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SharedFiles() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await filesApi.getAvailableFiles();\n        setFiles(response.data.files);\n      } catch (error) {\n        console.error('Ошибка загрузки файлов:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, []);\n  const handleDownload = async (file, encryptedAesKey, privateKeyPem) => {\n    try {\n      var _response$data, _response$data$constr;\n      const response = await filesApi.downloadFile(file.id);\n      console.log(response); // Это будет точно такой же response, как у axios.post\n\n      console.log('Full response:', {\n        status: response.status,\n        headers: response.headers,\n        data: response.data,\n        dataType: typeof response.data,\n        isArrayBuffer: response.data instanceof ArrayBuffer,\n        constructor: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$constr = _response$data.constructor) === null || _response$data$constr === void 0 ? void 0 : _response$data$constr.name\n      });\n      if (!response.data || !(response.data instanceof ArrayBuffer)) {\n        var _response$data2, _response$data2$const;\n        throw new Error(`Invalid data type: ${(_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$const = _response$data2.constructor) === null || _response$data2$const === void 0 ? void 0 : _response$data2$const.name}`);\n      }\n\n      // 3. Вызов decryptFile с правильными аргументами\n      const decryptedBlob = await decryptFile(response.data,\n      // ArrayBuffer\n      encryptedAesKey,\n      // string (base64)\n      privateKeyPem // string (PEM)\n      );\n      saveAs(decryptedBlob, file.name);\n    } catch (error) {\n      console.error(\"Ошибка при скачивании файла:\", error);\n      throw error; // Пробрасываем ошибку для обработки выше\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-list\",\n    children: files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(FileItem, {\n      file: {\n        id: file.uuid,\n        name: file.name,\n        size: formatBytes(file.size),\n        date: formatDate(file.created_at),\n        encryptedKey: file.symmetric_key\n      },\n      isOwner: false,\n      onDownload: handleDownload({\n        id: file.uuid,\n        name: file.name\n      })\n    }, file.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412\\u0430\\u043C \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435 \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u043B\\u0438 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F \\u043A \\u0444\\u0430\\u0439\\u043B\\u0430\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(SharedFiles, \"zMnqggxtwlDmTOERg77mrfWXT00=\");\n_c = SharedFiles;\nvar _c;\n$RefreshReg$(_c, \"SharedFiles\");","map":{"version":3,"names":["useState","useEffect","FileItem","filesApi","formatBytes","formatDate","decryptFile","saveAs","jsxDEV","_jsxDEV","SharedFiles","_s","files","setFiles","loading","setLoading","fetchFiles","response","getAvailableFiles","data","error","console","handleDownload","file","encryptedAesKey","privateKeyPem","_response$data","_response$data$constr","downloadFile","id","log","status","headers","dataType","isArrayBuffer","ArrayBuffer","constructor","name","_response$data2","_response$data2$const","Error","decryptedBlob","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","uuid","size","date","created_at","encryptedKey","symmetric_key","isOwner","onDownload","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/SharedFiles.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport FileItem from '../components/FileItem';\nimport filesApi from \"../api/files\";\nimport {formatBytes, formatDate} from \"../utils/helpers\";\nimport {decryptFile} from \"../utils/crypto\";\nimport {saveAs} from \"file-saver\";\n\nexport default function SharedFiles() {\n    const [files, setFiles] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchFiles = async () => {\n            try {\n                const response = await filesApi.getAvailableFiles();\n                setFiles(response.data.files);\n            } catch (error) {\n                console.error('Ошибка загрузки файлов:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchFiles();\n    }, []);\n\n    const handleDownload = async (file, encryptedAesKey, privateKeyPem) => {\n        try {\n            const response = await filesApi.downloadFile(file.id);\n            console.log(response); // Это будет точно такой же response, как у axios.post\n\n            console.log('Full response:', {\n                status: response.status,\n                headers: response.headers,\n                data: response.data,\n                dataType: typeof response.data,\n                isArrayBuffer: response.data instanceof ArrayBuffer,\n                constructor: response.data?.constructor?.name\n            });\n\n            if (!response.data || !(response.data instanceof ArrayBuffer)) {\n                throw new Error(`Invalid data type: ${response.data?.constructor?.name}`);\n            }\n\n            // 3. Вызов decryptFile с правильными аргументами\n            const decryptedBlob = await decryptFile(\n                response.data, // ArrayBuffer\n                encryptedAesKey, // string (base64)\n                privateKeyPem // string (PEM)\n            );\n\n            saveAs(decryptedBlob, file.name);\n        } catch (error) {\n            console.error(\"Ошибка при скачивании файла:\", error);\n            throw error; // Пробрасываем ошибку для обработки выше\n        }\n    }\n\n    if (loading) return <div>Загрузка...</div>;\n\n    return (\n        <div className=\"files-list\">\n            {files.length > 0 ? (\n                files.map((file) => (\n                    <FileItem\n                        key={file.uuid}\n                        file={{\n                            id: file.uuid,\n                            name: file.name,\n                            size: formatBytes(file.size),\n                            date: formatDate(file.created_at),\n                            encryptedKey: file.symmetric_key\n                        }}\n                        isOwner={false}\n                        onDownload={handleDownload({\n                            id: file.uuid,\n                            name: file.name,\n                        })}\n                    />\n                ))\n            ) : (\n                <p>Вам пока не предоставили доступ к файлам</p>\n            )}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}