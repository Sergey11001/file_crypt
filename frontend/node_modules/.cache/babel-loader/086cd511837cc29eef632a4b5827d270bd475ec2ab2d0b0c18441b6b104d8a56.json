{"ast":null,"code":"var _jsxFileName = \"/home/sergey/WebstormProjects/univer/filecrypt/src/pages/MyFiles.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport filesApi from '../api/files';\nimport FileItem from '../components/FileItem';\nimport { useNavigate } from 'react-router-dom';\nimport { formatBytes, formatDate } from '../utils/helpers';\nimport useAuthStore from \"../stores/authStore\";\nimport { saveAs } from \"file-saver\";\nimport { decryptFile, decryptWithPrivateKey, encryptWithPublicKey } from \"../utils/crypto\";\nimport Spinner from \"../components/Spinner\";\nimport { toast } from 'react-toastify';\nimport usePrivateKeyStore from \"../stores/privateKeyStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyFiles() {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuthStore();\n  const navigate = useNavigate();\n  const {\n    privateKey\n  } = usePrivateKeyStore();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/signin\");\n    }\n  }, [isAuthenticated, navigate]);\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [downloadingFile, setDownloadingFile] = useState(null);\n  const fetchFiles = async () => {\n    try {\n      const response = await filesApi.getMyFiles();\n      setFiles(response.data.files);\n    } catch (err) {\n      toast.warn(\"Ошибка загрузки файла\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const handleDownload = async (file, encryptedAesKey, privateKey) => {\n    if (!privateKey) {\n      toast.warn('Пожалуйста, сначала загрузите свой закрытый ключ, чтобы расшифровать файлы.');\n      return;\n    }\n    setDownloadingFile(file.id);\n    try {\n      const response = await filesApi.downloadFile(file.id);\n      if (!response.data || !(response.data instanceof ArrayBuffer)) {\n        var _response$data, _response$data$constr;\n        throw new Error(`Invalid data type: ${(_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$constr = _response$data.constructor) === null || _response$data$constr === void 0 ? void 0 : _response$data$constr.name}`);\n      }\n      let blob;\n      if (!encryptedAesKey) {\n        blob = new Blob([response.data]);\n      } else {\n        blob = await decryptFile(response.data, encryptedAesKey, privateKey);\n      }\n      saveAs(blob, file.name);\n    } catch (error) {\n      toast.error('Не удалось загрузить файл. Попробуйте еще раз.');\n    } finally {\n      setDownloadingFile(null);\n    }\n  };\n  const handleDelete = async fileUuid => {\n    try {\n      await filesApi.deleteFile(fileUuid);\n      await fetchFiles();\n      toast.success('Файл успешно удален.');\n    } catch (err) {\n      toast.error('Не удалось удалить файл.');\n    }\n  };\n  const handleShare = async (fileUuid, encryptedAesKey, recipientPublicKey, recipientUuid) => {\n    const symmetricKey = await decryptWithPrivateKey(encryptedAesKey, privateKey);\n    encryptedAesKey = await encryptWithPublicKey(symmetricKey, recipientPublicKey);\n    await filesApi.shareFile(fileUuid, {\n      recipient_uuid: recipientUuid,\n      symmetric_key: encryptedAesKey\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      size: \"large\",\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading files...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"files-list\",\n    children: [!privateKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key-warning\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u26A0\\uFE0F \\u0412\\u0430\\u043C \\u043D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439 \\u0437\\u0430\\u043A\\u0440\\u044B\\u0442\\u044B\\u0439 \\u043A\\u043B\\u044E\\u0447 \\u0434\\u043B\\u044F \\u0440\\u0430\\u0441\\u0448\\u0438\\u0444\\u0440\\u043E\\u0432\\u043A\\u0438 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(FileItem, {\n      file: {\n        id: file.uuid,\n        name: file.name,\n        size: formatBytes(file.size),\n        date: formatDate(file.created_at),\n        encryptedKey: file.symmetric_key\n      },\n      onDownload: () => handleDownload({\n        id: file.uuid,\n        name: file.name\n      }, file.symmetric_key, privateKey),\n      onShare: handleShare,\n      onDelete: handleDelete,\n      isOwner: true,\n      isDownloading: downloadingFile === file.uuid,\n      isDisabled: !privateKey\n    }, file.uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-message\",\n      children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u043D\\u0438\\u043A\\u0430\\u043A\\u0438\\u0445 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(MyFiles, \"fovD5whoC6up3kVO/GkRRlLO2Ao=\", false, function () {\n  return [useAuthStore, useNavigate, usePrivateKeyStore];\n});\n_c = MyFiles;\nvar _c;\n$RefreshReg$(_c, \"MyFiles\");","map":{"version":3,"names":["useState","useEffect","filesApi","FileItem","useNavigate","formatBytes","formatDate","useAuthStore","saveAs","decryptFile","decryptWithPrivateKey","encryptWithPublicKey","Spinner","toast","usePrivateKeyStore","jsxDEV","_jsxDEV","MyFiles","_s","isAuthenticated","navigate","privateKey","files","setFiles","loading","setLoading","downloadingFile","setDownloadingFile","fetchFiles","response","getMyFiles","data","err","warn","handleDownload","file","encryptedAesKey","id","downloadFile","ArrayBuffer","_response$data","_response$data$constr","Error","constructor","name","blob","Blob","error","handleDelete","fileUuid","deleteFile","success","handleShare","recipientPublicKey","recipientUuid","symmetricKey","shareFile","recipient_uuid","symmetric_key","className","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","uuid","date","created_at","encryptedKey","onDownload","onShare","onDelete","isOwner","isDownloading","isDisabled","_c","$RefreshReg$"],"sources":["/home/sergey/WebstormProjects/univer/filecrypt/src/pages/MyFiles.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport filesApi from '../api/files';\nimport FileItem from '../components/FileItem';\nimport { useNavigate } from 'react-router-dom';\nimport { formatBytes, formatDate } from '../utils/helpers';\nimport useAuthStore from \"../stores/authStore\"\nimport { saveAs } from \"file-saver\";\nimport {decryptFile, decryptWithPrivateKey, encryptWithPublicKey} from \"../utils/crypto\";\nimport Spinner from \"../components/Spinner\";\nimport { toast } from 'react-toastify';\nimport usePrivateKeyStore from \"../stores/privateKeyStore\";\n\nexport default function MyFiles() {\n    const { isAuthenticated } = useAuthStore();\n    const navigate = useNavigate();\n    const { privateKey } = usePrivateKeyStore();\n\n    useEffect(() => {\n        if (!isAuthenticated) {\n            navigate(\"/signin\");\n        }\n    }, [isAuthenticated, navigate]);\n\n    const [files, setFiles] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [downloadingFile, setDownloadingFile] = useState(null);\n\n    const fetchFiles = async () => {\n        try {\n            const response = await filesApi.getMyFiles();\n            setFiles(response.data.files);\n        } catch (err) {\n            toast.warn(\"Ошибка загрузки файла\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchFiles();\n    }, []);\n\n    const handleDownload = async (file, encryptedAesKey, privateKey) => {\n        if (!privateKey) {\n            toast.warn('Пожалуйста, сначала загрузите свой закрытый ключ, чтобы расшифровать файлы.');\n            return;\n        }\n\n        setDownloadingFile(file.id);\n        try {\n            const response = await filesApi.downloadFile(file.id);\n\n            if (!response.data || !(response.data instanceof ArrayBuffer)) {\n                throw new Error(`Invalid data type: ${response.data?.constructor?.name}`);\n            }\n\n            let blob\n            if (!encryptedAesKey) {\n                blob = new Blob([response.data]);\n            } else {\n                blob = await decryptFile(\n                    response.data,\n                    encryptedAesKey,\n                    privateKey\n                );\n            }\n\n            saveAs(blob, file.name);\n        } catch (error) {\n            toast.error('Не удалось загрузить файл. Попробуйте еще раз.');\n        } finally {\n            setDownloadingFile(null);\n        }\n    }\n\n    const handleDelete = async (fileUuid) => {\n        try {\n            await filesApi.deleteFile(fileUuid);\n            await fetchFiles();\n            toast.success('Файл успешно удален.');\n        } catch (err) {\n            toast.error('Не удалось удалить файл.');\n        }\n    };\n\n    const handleShare = async (fileUuid, encryptedAesKey, recipientPublicKey, recipientUuid) => {\n        const symmetricKey = await decryptWithPrivateKey(encryptedAesKey, privateKey);\n\n        encryptedAesKey = await encryptWithPublicKey(symmetricKey, recipientPublicKey);\n\n        await filesApi.shareFile(fileUuid, {\n            recipient_uuid: recipientUuid,\n            symmetric_key: encryptedAesKey,\n        });\n    };\n\n    if (loading) return (\n        <div className=\"loading-container\">\n            <Spinner size=\"large\" color=\"primary\" />\n            <p>Loading files...</p>\n        </div>\n    );\n\n    return (\n        <div className=\"files-list\">\n            {!privateKey && (\n                <div className=\"key-warning\">\n                    <span>⚠️ Вам необходимо загрузить свой закрытый ключ для расшифровки файлов.</span>\n                </div>\n            )}\n\n            {files.length > 0 ? (\n                files.map((file) => (\n                    <FileItem\n                        key={file.uuid}\n                        file={{\n                            id: file.uuid,\n                            name: file.name,\n                            size: formatBytes(file.size),\n                            date: formatDate(file.created_at),\n                            encryptedKey: file.symmetric_key\n                        }}\n                        onDownload={() => handleDownload({\n                            id: file.uuid,\n                            name: file.name,\n                        }, file.symmetric_key, privateKey)}\n                        onShare={handleShare}\n                        onDelete={handleDelete}\n                        isOwner={true}\n                        isDownloading={downloadingFile === file.uuid}\n                        isDisabled={!privateKey}\n                    />\n                ))\n            ) : (\n                <p className=\"empty-message\">У вас нет никаких файлов.</p>\n            )}\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}